BRANCH CHECK

0000 1241 addi $r1,$r1,1
0000 0001 0000 0000 0000 0000 0000 0000 
0001 9281 bne $r1,$r2,1
0000 0001 0000 0000 0000 0000 0000 0000 
0003 1243 addi $r1,$r1,3
0000 0004 0000 0000 0000 0000 0000 0000 
0004 a444 blt $r2,$r1,4
0000 0004 0000 0000 0000 0000 0000 0000 
0009 1b45 addi $r5,$r5,5
0000 0004 0000 0000 0000 0005 0000 0000 
000a 91ff bne $r0,$r7,-1
0000 0004 0000 0000 0000 0005 0000 0000 
000b 1fc1 addi $r7,$r7,1
0000 0004 0000 0000 0000 0005 0000 0001 
000c 91ff bne $r0,$r7,-1

JUMPS CHECK


0000 1241 addi $r1,$r1,1
0000 0001 0000 0000 0000 0000 0000 0000 
0001 b003 j 3
0000 0001 0000 0000 0000 0000 0000 0000 
0003 1243 addi $r1,$r1,3
0000 0004 0000 0000 0000 0000 0000 0000 
0004 d009 jal 9
0000 0004 0000 0000 0000 0000 0000 0005 
0009 1b45 addi $r5,$r5,5
0000 0004 0000 0000 0000 0005 0000 0005 
000a ce00 jr $r7
0000 0004 0000 0000 0000 0005 0000 0005 
0005 1904 addi $r4,$r4,4
0000 0004 0000 0000 0004 0005 0000 0005 
0006 91ff bne $r0,$r7,-1

ALU IO LW SW CHECK
0000 e0c0 input $r3
j
0000 0000 0000 006a 0000 0000 0000 0000 
0001 f600 output $r3
j0000 0000 0000 006a 0000 0000 0000 0000 
0002 1041 addi $r1,$r0,1
0000 0001 0000 006a 0000 0000 0000 0000 
0003 8440 sw $r1,0($r2)
0000 0001 0000 006a 0000 0000 0000 0000 
0004 7480 lw $r2,0($r2)
0000 0001 0001 006a 0000 0000 0000 0000 
0005 1481 addi $r2,$r2,1
0000 0001 0002 006a 0000 0000 0000 0000 
0006 0298 add $r3,$r1,$r2
0000 0001 0002 0003 0000 0000 0000 0000 
0007 2460 sub $r4,$r2,$r1
0000 0001 0002 0003 0001 0000 0000 0000 
0008 4468 xor $r5,$r2,$r1
0000 0001 0002 0003 0001 0003 0000 0000 
0009 520a sll $r1,$r1,2
0000 0004 0002 0003 0001 0003 0000 0000 
000a 6209 srl $r1,$r1,1
0000 0002 0002 0003 0001 0003 0000 0000 
000b 91ff bne $r0,$r7,-1
0000 0002 0002 0003 0001 0003 0000 0000 
000c 1fc1 addi $r7,$r7,1
0000 0002 0002 0003 0001 0003 0000 0001 
000d 91ff bne $r0,$r7,-1
14 dynamic instructions executed
0000 0002 0002 0003 0001 0003 0000 0001 

LW NOT WORK CHECK


0000 e0c0 input $r3
j
0000 0000 0000 006a 0000 0000 0000 0000 
0001 82c0 sw $r3,0($r1)
0000 0000 0000 006a 0000 0000 0000 0000 
0002 1241 addi $r1,$r1,1
0000 0001 0000 006a 0000 0000 0000 0000 
0003 9441 bne $r2,$r1,1
0000 0001 0000 006a 0000 0000 0000 0000 
0005 7300 lw $r4,0($r1)
0000 0001 0000 006a 82c0 0000 0000 0000 
0006 f800 output $r4
@0000 0001 0000 006a 82c0 0000 0000 0000 
0007 91ff bne $r0,$r7,-1
0000 0001 0000 006a 82c0 0000 0000 0000 
0008 1fc1 addi $r7,$r7,1
0000 0001 0000 006a 82c0 0000 0000 0001 
0009 91ff bne $r0,$r7,-1
9 dynamic instructions executed
0000 0001 0000 006a 82c0 0000 0000 0001

NO BRANCH CHECK


0000 9283 bne $r1,$r2,3
0000 0000 0000 0000 0000 0000 0000 0000 
0001 16c2 addi $r3,$r3,2
0000 0000 0000 0002 0000 0000 0000 0000 
0002 92c1 bne $r1,$r3,1
0000 0000 0000 0002 0000 0000 0000 0000 
0004 1243 addi $r1,$r1,3
0000 0003 0000 0002 0000 0000 0000 0000 
0005 a2c3 blt $r1,$r3,3
0000 0003 0000 0002 0000 0000 0000 0000 
0006 1904 addi $r4,$r4,4
0000 0003 0000 0002 0004 0000 0000 0000 
0007 a641 blt $r3,$r1,1
0000 0003 0000 0002 0004 0000 0000 0000 
0009 1b45 addi $r5,$r5,5
0000 0003 0000 0002 0004 0005 0000 0000 
000a 91ff bne $r0,$r7,-1
0000 0003 0000 0002 0004 0005 0000 0000 
000b 1fc1 addi $r7,$r7,1
0000 0003 0000 0002 0004 0005 0000 0001 
000c 91ff bne $r0,$r7,-1
11 dynamic instructions executed
0000 0003 0000 0002 0004 0005 0000 0001 
